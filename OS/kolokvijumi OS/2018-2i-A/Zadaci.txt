Zadatak 1:

Programu se prosledjuju putanja do fajla i broj sekundi od epohe. Program treba da podesi vreme pristupa i modifikacije prosledjenom fajlu na prosledjeni broj sekundi.

POMOC: Nakon pokretanja programa uradite na primer stat 1.txt i pogledajte datum koji se dobije za Access time i Modification time, treba da odgovara vremenu u redu Rezultujuca vremena 

Zadatak 2:

Napisati program koji prima putanju do direktorijuma i novi naziv za taj direktorijum. Program treba da preimenuje direktorijum u skladu sa drugim argumentom komandne linije.

NAPOMENE: Proverite da li putanja pokazuje na direktorijum. Slobodno mozete pretpostaviti da ne postoji fajl sa nazivom u koji treba preimenovati (na primer, u prvoj koloni tabele, a/b/d ne postoji pre pokretanja programa). 

Zadatak 3:

Napisati program koji prima putanju do fajla i vrsi zamenu prava pristupa za vlasnicku grupu i ostale korisnike.

Zadatak 4:

Napisati program koji prima kao argumente komande linije putanje do 2 fajla. Prvi fajl u svakom redu sadrzi jedan ceo broj i rec, npr. sadrzaj bi mogao da izgleda ovako:

7 Milivoje
213 dzivdzan
153 bla

Broj predstavlja udaljenje od pocetka drugog fajla, a rec koja sledi je rec koju treba upisati u drugi fajl pocevsi od pozicije zadate brojem. Dakle, rec Milivoje treba upisati u drugi fajl od pozicije 7 u tom fajlu, rec dzivdzan pocevsi od 213 itd. 

Zadatak 5:

Napisati program koji prima putanju do direktorijuma i ispisuje razliku u velicini najveceg i najmanjeg regularnog fajla. Pretrazuju se fajlovi koji se nalaze unutar zadatog direktorijuma rekurzivno (dakle i u poddirektorijumima itd.).

U slucaju da nije dobar broj argumenata komandne linije, da prosledjena putanja ne postoji ili da nije direktorijum (na primer prosledjen je regularan fajl) zavrsiti sa exit code -om 1.

Zabranjeno je koriscenje ugradjene nftw() funkcije! Slobodno pretpostaviti da ako je zaista prosledjen direktorijum u njemu ima bar 1 regularni fajl!

